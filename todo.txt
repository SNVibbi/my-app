1. Introduction

a) Hello React APP

2. Components

a) Create a simple component 
b) Components can refer to other components in their output.
c) You can split components into smaller components for example a userProfileCard
d) Components names should be PascalCase.
e) Elements that need keys should be unique, non-random identifiers.
f) Methods should be in camelCase and be named for their function.
g) Components should be written is ES6 (or ES2015) syntax.
h) Lists and keys

3. React Events 

a) Click Events - for example increment and decrement counters (onClick)
b) Change Events- for example input fields (onChange)
c) Mouse Events - for example mouse over and mouse out (onMouseOver)
d) Form Events - for example form events (onSubmit)


4. React props

/* Passing a react prp as an attribute */
<Car brand="Ford" />

/* Component receiving the prop */
function Car(props) {
    return <h2>I am a { props.brand }!</h2>;
}

/* You can destructure props */
function Car({ brand }) {
    return <h2>I am a { brand }!</h2>;
}

- Props are passed to the component using the props object.
- React props can be spread in individually.
- React props can be given a default value if none is provided.
- Update a react prop with state, useState() => next topic.

5. Conditional Rendering 

a) For example , loading UI vs main UI => we can use a timer to simulate fetching data from external service.


6. React Hooks (React 16.8)
Remember: Refer to how to update props with state.

a) useState - for example, useState(0)
b) useEffect - for example, useEffect(() => {}, [])
c) useContext - for example, useContext(MyContext)

d) useReducer
e) useRef
f) useCallback
g) useMemo